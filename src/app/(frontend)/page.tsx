import styles from "@/decorators/blogData.module.css"

export default async function Homepage() {
    const blogArticle: string = '<h1>Understanding React Server Components</h1> <p><a>React Server Components (RSCs)</a> augment the fundamentals of React beyond being a pure rendering library into incorporating data-fetching and remote client-server communication within the framework.</p><p>Below, we’ll walk you through why RSCs needed to be created, what they do best, and when to use them. We\'ll also touch on how Next.js eases and enhances the <a>RSC implementation details</a> through the App Router.</p> <p><a>React Server Components (RSCs)</a> augment the fundamentals of React beyond being a pure rendering library into incorporating data-fetching and remote client-server communication within the framework.</p> <h2>What did server-side rendering and React Suspense solve?</h2> <p>Below, we’ll walk you through why RSCs needed to be created, what they do best, and when to use them. We\'ll also touch on how Next.js eases and enhances the <a>RSC implementation details</a> through the App Router.</p> <p><a>React Server Components (RSCs)</a> augment the fundamentals of React beyond being a pure rendering library into incorporating data-fetching and remote client-server communication within the framework.</p><p>Below, we’ll walk you through why RSCs needed to be created, what they do best, and when to use them. We\'ll also touch on how Next.js eases and enhances the <a>RSC implementation details</a> through the App Router.</p> <p><a>React Server Components (RSCs)</a> augment the fundamentals of React beyond being a pure rendering library into incorporating data-fetching and remote client-server communication within the framework.</p><p>Below, we’ll walk you through why RSCs needed to be created, what they do best, and when to use them. We\'ll also touch on how Next.js eases and enhances the <a>RSC implementation details</a> through the App Router.</p> <h2>Why do we need Server Components?</h2> <p><a>React Server Components (RSCs)</a> augment the fundamentals of React beyond being a pure rendering library into incorporating data-fetching and remote client-server communication within the framework.</p><p>Below, we’ll walk you through why RSCs needed to be created, what they do best, and when to use them. We\'ll also touch on how Next.js eases and enhances the <a>RSC implementation details</a> through the App Router.</p><p><a>React Server Components (RSCs)</a> augment the fundamentals of React beyond being a pure rendering library into incorporating data-fetching and remote client-server communication within the framework.</p><p>Below, we’ll walk you through why RSCs needed to be created, what they do best, and when to use them. We\'ll also touch on how Next.js eases and enhances the <a>RSC implementation details</a> through the App Router.</p>'
    return (
        <>
        <div className="flex gap-3 items-center justify-start *:text-xs mt-6 mb-4">
            <span className="rounded-full p-1 px-3 bg-zinc-300 dark:bg-zinc-800">SEO blog</span>
            <span className="text-zinc-700 dark:text-zinc-400">Friday, 14th June 2024</span>
        </div>
        <article dangerouslySetInnerHTML={{ __html: blogArticle }} className={styles.blogArticle} />
        </>
    )
}